<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>core</artifactId>
        <groupId>com.losaxa</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <artifactId>core-starter-dependencies</artifactId>

    <properties>
        <!-- framework -->
        <core-starter-web.version>1.0-SNAPSHOT</core-starter-web.version>
        <core-hystrix-fallback.version>1.0-SNAPSHOT</core-hystrix-fallback.version>
        <core-common.version>1.0-SNAPSHOT</core-common.version>
        <core-starter-mongo.version>1.0-SNAPSHOT</core-starter-mongo.version>
        <core-starter-async.version>1.0-SNAPSHOT</core-starter-async.version>
        <core-starter-swagger.version>1.0-SNAPSHOT</core-starter-swagger.version>
        <core-starter-uid.version>1.0-SNAPSHOT</core-starter-uid.version>
        <core-starter-swagger.version>1.0-SNAPSHOT</core-starter-swagger.version>
        <core-starter-feign.version>1.0-SNAPSHOT</core-starter-feign.version>
        <core-starter-security.version>1.0-SNAPSHOT</core-starter-security.version>
        <core-starter-auto-services.version>1.0-SNAPSHOT</core-starter-auto-services.version>
        <core-security.version>1.0-SNAPSHOT</core-security.version>
        <core-spring.version>1.0-SNAPSHOT</core-spring.version>
        <core-starter-common.version>1.0-SNAPSHOT</core-starter-common.version>
        <core-starter-k8s.version>1.0-SNAPSHOT</core-starter-k8s.version>
        <core-starter-redisson.version>1.0-SNAPSHOT</core-starter-redisson.version>
        <core-starter-elastic.version>1.0-SNAPSHOT</core-starter-elastic.version>

        <!-- 开源 -->
        <spring-cloud.version>2020.0.3</spring-cloud.version>
        <spring-boot.version>2.5.2</spring-boot.version>
        <redisson-spring-boot-starter.version>3.16.8</redisson-spring-boot-starter.version>
        <lombok.version>1.18.8</lombok.version>
        <swagger.version>3.0.0</swagger.version>
        <swagger-ui.version>3.0.3</swagger-ui.version>
        <swagger-annotations.version>1.6.2</swagger-annotations.version>
        <dingtalk.version>1.0.1</dingtalk.version>
        <spring-cloud-starter-netflix-hystrix.version>2.2.9.RELEASE</spring-cloud-starter-netflix-hystrix.version>
        <sentry.version>5.1.2</sentry.version>
        <guava.version>31.0.1-jre</guava.version>
        <apache-commons.version>3.12.0</apache-commons.version>
        <junit.version>4.13.2</junit.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <spring-retry.version>1.3.1</spring-retry.version>
        <common-random.version>1.0.10</common-random.version>
        <javassist.version>3.28.0-GA</javassist.version>
        <elasticsearch-java.version>8.1.0</elasticsearch-java.version>
        <jakarta.json-api.version>2.0.1</jakarta.json-api.version>

        <!-- k8s -->
        <fabric8.maven.plugin.version>4.4.0</fabric8.maven.plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-compiler-plugin.version>3.5</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <docker-host>tcp://vipserver.com:2375</docker-host>
        <image-namespaces>losaxa</image-namespaces>
        <image-registry>devops.com:9981</image-registry>
        <k8s-namespaces>framework</k8s-namespaces>
        <k8s-reader>framework-reader</k8s-reader>
        <spring.profiles.active>dev</spring.profiles.active>

        <!-- plugin -->
        <build-encoding>UTF-8</build-encoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <maven-compiler.version>3.8.1</maven-compiler.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- framework -->
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-auto-services</artifactId>
                <version>${core-starter-auto-services.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-redisson</artifactId>
                <version>${core-starter-redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-common</artifactId>
                <version>${core-starter-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-web</artifactId>
                <version>${core-starter-web.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-hystrix-fallback</artifactId>
                <version>${core-hystrix-fallback.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-mongo</artifactId>
                <version>${core-starter-mongo.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-common</artifactId>
                <version>${core-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-async</artifactId>
                <version>${core-starter-async.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-swagger</artifactId>
                <version>${core-starter-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-feign</artifactId>
                <version>${core-starter-feign.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-uid-mongo</artifactId>
                <version>${core-starter-uid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-security</artifactId>
                <version>${core-starter-security.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-security</artifactId>
                <version>${core-security.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-k8s</artifactId>
                <version>${core-starter-k8s.version}</version>
            </dependency>
            <dependency>
                <groupId>com.losaxa</groupId>
                <artifactId>core-starter-elastic</artifactId>
                <version>${core-starter-elastic.version}</version>
            </dependency>

            <!-- 开源 -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>alibaba-dingtalk-service-sdk</artifactId>
                <version>${dingtalk.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.jms</groupId>
                        <artifactId>jms</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${spring-cloud-starter-netflix-hystrix.version}</version>
            </dependency>
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-logback</artifactId>
                <version>${sentry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-spring-boot-starter</artifactId>
                <version>${sentry.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring-retry.version}</version>
            </dependency>
            <dependency>
                <groupId>com.apifan.common</groupId>
                <artifactId>common-random</artifactId>
                <version>${common-random.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>
            <dependency>
                <groupId>co.elastic.clients</groupId>
                <artifactId>elasticsearch-java</artifactId>
                <version>${elasticsearch-java.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.json</groupId>
                <artifactId>jakarta.json-api</artifactId>
                <version>${jakarta.json-api.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <!--k8s-->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>fabric8-maven-plugin</artifactId>
                    <version>${fabric8.maven.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>fmp</id>
                            <phase>package</phase>
                            <goals>
                                <goal>resource</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>true</verbose>
                        <name>${project.artifactId}</name>
                        <mode>kubernetes</mode>
                        <namespace>${k8s-namespaces}</namespace>
                        <dockerHost>${docker-host}</dockerHost>
                        <resources>
                            <imagePullPolicy>Always</imagePullPolicy>
                        </resources>
                        <generator>
                            <includes>
                                <include>spring-boot</include>
                            </includes>
                            <config>
                                <spring-boot>
                                    <name>
                                        ${image-registry}/${image-namespaces}/${project.artifactId}-${spring.profiles.active}:${project.version}
                                    </name>
                                    <alias>${project.artifactId}</alias>
                                </spring-boot>
                            </config>
                        </generator>
                        <enricher>
                            <excludes>
                                <exclude>fmp-serviceaccount</exclude>
                                <exclude>fmp-git</exclude>
                            </excludes>
                            <config>
                                <fmp-service>
                                    <type>NodePort</type>
                                </fmp-service>
                            </config>
                        </enricher>
                        <authConfig>
                            <username>admin</username>
                            <password>Admin123456</password>
                            <push>
                                <username>admin</username>
                                <password>Admin123456</password>
                            </push>
                        </authConfig>
                    </configuration>
                </plugin>

                <!--springboot-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- java编译插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>${build-encoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${build-encoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>${maven-archetype-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <!-- java编译插件 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- 源码 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
        </plugins>

        <!--        资源文件配置-->
        <resources>
            <resource>
                <directory>src/main/fabric8/</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>